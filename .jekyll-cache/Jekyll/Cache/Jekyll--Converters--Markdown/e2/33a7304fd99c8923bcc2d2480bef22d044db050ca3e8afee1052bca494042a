I"B-<h2 id="一solr-概述">一、Solr 概述</h2>

<h4 id="11-solr-简介">1.1 Solr 简介</h4>

<ul>
  <li>Solr：<code class="highlighter-rouge">Solr 是一个高性能，采用 Java5 开发，基于 Lucene 的全文搜索服务器</code>。同时对其进 行了扩展，提供了比 Lucene 更为丰富的查询语言，同时实现了可配置、可扩展并对查询性 能进行了优化，并且提供了一个完善的功能管理界面，是一款非常优秀的全文搜索引擎。</li>
  <li>下载：Solr 是 Apache 下的一个开源项目，由于是基于 Lucene 的一个实现产品，因此将 Solr 放在 Lucene 项目当中。可以在<a href="https://lucene.apache.org/solr/">官方网站</a>的<a href="http://archive.apache.org/dist/lucene/solr/">历史版本</a>中下载我们需要的版本。此处以<strong>4.10.2</strong>为例</li>
  <li>目录结构
    <ul>
      <li>contrib/dist：存放Solr 插件依赖的 jar 包</li>
      <li>example：存放Solr内置实例
        <ul>
          <li>Solr 目录用来存放 Solr 的 Core，主要包含索引和配置文件。</li>
          <li>solr-webapp 目录中管理者 Jetty 运行的 Solr 服务去程序。</li>
          <li>Webapps 目录中的 solr.war 为 solr 服务的文本应用程序。</li>
          <li>start.jar：内置 Jetty 服务器，可以直接运行Solr 服务</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h4 id="12-运行-solr-服务">1.2 运行 Solr 服务</h4>

<p>Solr 实际上是一个 web 服务器应用程序，因此要启动 Solr 需要文本服务器，而在 Solr 实例代码中已经直接集成了 Jetty 服务器，我们可以直接使用， 也可以单独配置和使用 Tomcat 服务器来启动 Solr 服务。</p>

<ul>
  <li>
    <p>启动 Solr 服务的方式</p>

    <ul>
      <li>
        <p>使用 Solr <code class="highlighter-rouge">内置的 Jetty 服务器</code>启动 Solr</p>

        <ol>
          <li>
            <p>使用内置的 Jetty 来启动 Solr 服务器只需要在 example 目录下，执行 start.jar 程序即可，我们可以直接执行命令：</p>

            <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>java –jar start.jar
</code></pre></div>            </div>
          </li>
          <li>
            <p>当服务启动后，默认发布在 <code class="highlighter-rouge">8983</code> 端口，所以可以访问该端口来访问 Solr 服务。</p>
          </li>
        </ol>
      </li>
      <li>
        <p>将 Solr 部署到 Tomcat 中</p>

        <ol>
          <li>
            <p>在 Tomcat 中部署 Web 服务，将 solr-4.10.2/example/webapps/solr.war 复制到自 己的 tomcat/webapps 目录中，解压后移除war包(因为每次服务器重新启动后，会被覆盖)。</p>

            <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cd</span> /home/silhouette/solr-4.10.2/example/webapps
<span class="nv">$ </span><span class="nb">cp </span>solr.war /home/silhouette/apache-tomcat-8.5.38/webapps/ 
<span class="nv">$ </span> unzip solr.war <span class="nt">-d</span> solr
</code></pre></div>            </div>
          </li>
          <li>
            <p>解压后Solr还不能直接访问，因为缺少相应的jar包，所以需要将 Solr 用到的 jar 包拷贝到项目的 lib 目录下</p>

            <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">cd</span> /home/silhouette/solr-4.10.2/example/lib/ext
<span class="nv">$ </span><span class="nb">cp</span> <span class="k">*</span> /home/silhouette/apache-tomcat-8.5.38/webapps/solr/WEB-INF/lib/
<span class="nv">$ </span><span class="nb">cd</span> /home/silhouette/solr-4.10.2/example/resources
<span class="nv">$ </span><span class="nb">cp </span>log4j.properties /home/silhouette/apache-tomcat-8.5.38/webapps/solr/WEB-INF/classes
</code></pre></div>            </div>
          </li>
          <li>
            <p>拷贝Solr 的索引目录。</p>
          </li>
        </ol>

        <ul>
          <li>
            <p>将 Solr 用到的 jar 包拷贝到项目的 lib 目录下或者只想所在目录，在启动前还需要设置 solr.solr.home 启动参数，在 catalina.bat 文件添加配置：</p>

            <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">mkdir </span>solr_home
<span class="nv">$ </span><span class="nb">cd </span>solr_home
<span class="nv">$ </span><span class="nb">cp</span> <span class="nt">-r</span> ../example/solr ./
<span class="nv">$ </span>vim catalina.sh
<span class="nv">$ </span><span class="nb">set</span> <span class="s2">"JAVA_OPTS=-Dsolr.solr.home=/Users/silhouette/software/apache/solr/solr-4.10.2/solr_home/solr"</span>
<span class="c">####Linux 环境下</span>
<span class="nv">$ </span><span class="nb">export</span> <span class="s2">"JAVA_OPTS=-Dsolr.solr.home=/Users/silhouette/software/apache/solr/solr-4.10.2/solr_home/solr"</span>
</code></pre></div>            </div>
          </li>
          <li>
            <p>启动 Tomcat 则 Solr 的服务器发布就完成了。</p>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h4 id="13-solr-管理界面">1.3 Solr 管理界面</h4>

<p><code class="highlighter-rouge">solr </code>服务器管理界面可以查看系统状态、solr设置、分词检测、查询索引、增减core、查看日志等</p>

<ul>
  <li>
    <p>DashBoard(仪表盘)</p>

    <ul>
      <li>
        <p>查看到solr运行时间、solr版本，系统内存、虚拟机内存的使用情况</p>

        <p><img src="/img/images/Full-text_Search/solr/01-DashBoard.png" /></p>
      </li>
    </ul>
  </li>
  <li>
    <p>Logging(日志)</p>

    <ul>
      <li>
        <p>显示solr运行出现的异常或错误</p>

        <p><img src="/Users/silhouette/note/全文检索技术/Solr/images/00/02-Logging.png" alt="02-Logging" style="zoom:50%;" /></p>
      </li>
    </ul>
  </li>
  <li>
    <p>Core Admin</p>

    <ul>
      <li>
        <p>在 Solr 中，每一个 Core，代表一个索引库，里面包含索引数据及其信息。Solr 中可以 拥有多个 Core，也就同时管理多个索引库！就像在 MySQL 中可以有多个 database 一样。</p>

        <p><img src="/Users/silhouette/note/全文检索技术/Solr/images/00/03-Core Admin.png" alt="03-Core Admin" style="zoom:50%;" /></p>

        <ul>
          <li>name：给core起的名字；</li>
          <li>instanceDir：与我们在配置solr索引库时的solr_home里新建的core文件夹名一致；</li>
          <li>dataDir:确认Add Core时，会在new_core目录下生成名为data的文件夹</li>
          <li>config：new_core下的conf下的config配置文件(solrconfig.xml)</li>
          <li>schema: new_core下的conf下的schema文件(schema.xml)</li>
        </ul>

        <blockquote>
          <p>Tips：可以直接拷贝本地的Collection1然后重命名，再修改core.properties文件即可达到相同效果</p>
        </blockquote>
      </li>
    </ul>
  </li>
  <li>
    <p>Java Properties</p>

    <ul>
      <li>可查看到java相关的一些属性的信息</li>
    </ul>
  </li>
  <li>
    <p><strong>Core Selecter(core选择器)</strong></p>

    <ul>
      <li>
        <p>需要在Core Admin里添加了core后才有可选项，这里以默认的collection1为例。</p>

        <p><img src="/Users/silhouette/note/全文检索技术/Solr/images/00/04-Core Selecter.png" alt="04-Core Selecter" style="zoom:50%;" /></p>
      </li>
      <li>
        <p>通过 Solr 管理界面查询索引数据</p>

        <p><img src="/Users/silhouette/note/全文检索技术/Solr/images/00/05-通过 Solr 管理界面查询索引数据.png" alt="05-通过 Solr 管理界面查询索引数据" style="zoom:50%;" /></p>
      </li>
    </ul>
  </li>
</ul>

<h4 id="14-solr中的core详解">1.4 Solr中的Core详解</h4>

<ul>
  <li>
    <p>Core 的概述：在Solr 中一个 core就是一个索引库，里面包含索引信息和配置文件。</p>
  </li>
  <li>
    <p>目录结构</p>

    <ul>
      <li>
        <p>conf：配置文件目录</p>

        <ul>
          <li>
            <p>schema.xml：字段及字段约束信息，如：字段数据类型、字段是否索引、是否存储、是否分词等</p>

            <ul>
              <li>
                <p>通过<code class="highlighter-rouge">Field</code> 字段定义字段的属性信息</p>

                <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- 配置Field，就是配置在Solr中可以使用的字段名称。属性及含义：
        name：字段名称 【_version_、_root_是Solr系统使用的】
        type：字段类型，指向的是本文件中的&lt;fieldType&gt;标签 
        indexed：是否创建索引 
        stored：是否被存储 
        multiValued：是否可以有多个值，如果字段可以有多个值，设置为 true
--&gt;</span>
<span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">"string"</span> <span class="na">class=</span><span class="s">"solr.StrField"</span> <span class="na">sortMissingLast=</span><span class="s">"true"</span> <span class="nt">/&gt;</span>
</code></pre></div>                </div>
              </li>
              <li>
                <p>通过 <code class="highlighter-rouge">FieldType</code> 字段指定数据类型</p>

                <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!--
name：字段类型的名称，可以自定义，&lt;field&gt;标签的 type 属性可以引用该字段，来指定数据类型
class：字段类型在 Solr 中的类。StrField 可索引不可分词。TextField 字段可索引，可以分词， 所以需要指定分词器
&lt;analyzer&gt;：这个子标签用来指定分词器,
--&gt;</span>
<span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">"text_general"</span> <span class="na">class=</span><span class="s">"solr.TextField"</span> <span class="na">positionIncrementGap=</span><span class="s">"100"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">"index"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">"solr.StandardTokenizerFactory"</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">"solr.StopFilterFactory"</span> <span class="na">ignoreCase=</span><span class="s">"true"</span> <span class="na">words=</span><span class="s">"stopwords.txt"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">"solr.LowerCaseFilterFactory"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;/analyzer&gt;</span>
    <span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">"query"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;tokenizer</span> <span class="na">class=</span><span class="s">"solr.StandardTokenizerFactory"</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">"solr.StopFilterFactory"</span> <span class="na">ignoreCase=</span><span class="s">"true"</span> <span class="na">words=</span><span class="s">"stopwords.txt"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">"solr.SynonymFilterFactory"</span> <span class="na">synonyms=</span><span class="s">"synonyms.txt"</span> 
                <span class="na">ignoreCase=</span><span class="s">"true"</span> <span class="na">expand=</span><span class="s">"true"</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;filter</span> <span class="na">class=</span><span class="s">"solr.LowerCaseFilterFactory"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;/analyzer&gt;</span>
<span class="nt">&lt;/fieldType&gt;</span>
</code></pre></div>                </div>

                <ul>
                  <li>
                    <p><code class="highlighter-rouge">配置使用IK分词器</code></p>

                    <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!--先将IK分词器的jar包放入项目的lib目录中--&gt;</span>
<span class="nt">&lt;fieldType</span> <span class="na">name=</span><span class="s">"text_general"</span> <span class="na">class=</span><span class="s">"solr.TextField"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">"index"</span> <span class="na">class=</span><span class="s">"org.wltea.analyzer.lucene.IKAnalyzer"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;analyzer</span> <span class="na">type=</span><span class="s">"query"</span> <span class="na">class=</span><span class="s">"org.wltea.analyzer.lucene.IKAnalyzer"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/fieldType&gt;</span>
</code></pre></div>                    </div>
                  </li>
                </ul>
              </li>
              <li>
                <p>通过<code class="highlighter-rouge">dynamicField</code>字段来定义动态字段</p>

                <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!--表示只要满足特定的规则就可以使用--&gt;</span>
<span class="nt">&lt;dynamicField</span> <span class="na">name=</span><span class="s">"*_i"</span>  <span class="na">type=</span><span class="s">"int"</span>    <span class="na">indexed=</span><span class="s">"true"</span>  <span class="na">stored=</span><span class="s">"true"</span><span class="nt">/&gt;</span>
</code></pre></div>                </div>
              </li>
              <li>
                <p>通过<code class="highlighter-rouge">uniqueKey</code>字段来配置唯一主键</p>

                <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!--Lucene 中本来是没有主键的。删除和修改都需要根据词条进行匹配。
而 Solr 却可以设 置一个字段为唯一主键，这样增删改操作都可以根据主键来进行。--&gt;</span>
<span class="nt">&lt;uniqueKey&gt;</span>id<span class="nt">&lt;/uniqueKey&gt;</span>
</code></pre></div>                </div>
              </li>
            </ul>
          </li>
          <li>
            <p>Solrconfig.xml：索引库的相关配置</p>

            <ul>
              <li>
                <p>通过<code class="highlighter-rouge">&lt;lib/&gt;</code>标签来配置插件依赖的 jar 包</p>

                <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!--
如果引入多个 jar 包，要注意包和包的依赖关系，被依赖的包配置在前面
这里的 jar 包目录如果是相对路径，相对于 core索引库 所在目录
--&gt;</span>
<span class="nt">&lt;lib</span> <span class="na">dir=</span><span class="s">"../../../contrib/extraction/lib"</span> <span class="na">regex=</span><span class="s">".*\.jar"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;lib</span> <span class="na">dir=</span><span class="s">"../../../dist/"</span> <span class="na">regex=</span><span class="s">"solr-cell-\d.*\.jar"</span> <span class="nt">/&gt;</span>
</code></pre></div>                </div>
              </li>
              <li>
                <p>通过<code class="highlighter-rouge">&lt;requestHandler/&gt;</code>标签来配置 Solr 处理各种请求(搜索/select、更新/update、等)的各种参数</p>

                <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!--主要参数：
			name：请求类型，例如：select、query、get、update
			class：处理请求的类
			initParams：可选。引用&lt;initParams&gt;标签中的配置
			&lt;lst name="defaults"&gt;：定义各种缺省的配置，比如缺省的 parser、缺省返回条数
--&gt;</span>
<span class="nt">&lt;requestHandler</span> <span class="na">name=</span><span class="s">"/select"</span> <span class="na">class=</span><span class="s">"solr.SearchHandler"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;lst</span> <span class="na">name=</span><span class="s">"defaults"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;str</span> <span class="na">name=</span><span class="s">"echoParams"</span><span class="nt">&gt;</span>explicit<span class="nt">&lt;/str&gt;</span>
      <span class="nt">&lt;int</span> <span class="na">name=</span><span class="s">"rows"</span><span class="nt">&gt;</span>10<span class="nt">&lt;/int&gt;</span>
      <span class="nt">&lt;str</span> <span class="na">name=</span><span class="s">"df"</span><span class="nt">&gt;</span>text<span class="nt">&lt;/str&gt;</span>
  <span class="nt">&lt;/lst&gt;</span>
<span class="nt">&lt;/requestHandler&gt;</span>
</code></pre></div>                </div>
              </li>
            </ul>
          </li>
        </ul>
      </li>
      <li>
        <p>data：索引数据目录</p>
      </li>
      <li>
        <p>Core.properties：core的自身属性。注意core的name属性与外面索引文件名保持一致</p>
      </li>
    </ul>
  </li>
</ul>

<h2 id="二solrj的使用">二、SolrJ的使用</h2>

<h4 id="21-概述">2.1 概述</h4>

<p>SolrJ 是 Apache 官方提供的一套 Java 开发的，访问 Solr 服务的 API，通过这套 API 可 以让我们的程序与 Solr 服务产生交互，让我们的程序可以实现对 Solr 索引库的增删改查。</p>

<ul>
  <li>
    <p>添加依赖：</p>

    <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;dependencies&gt;</span>
    <span class="c">&lt;!-- Junit单元测试 --&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
      <span class="nt">&lt;groupId&gt;</span>junit<span class="nt">&lt;/groupId&gt;</span>
      <span class="nt">&lt;artifactId&gt;</span>junit<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;version&gt;</span>4.12<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
      <span class="nt">&lt;groupId&gt;</span>org.apache.solr<span class="nt">&lt;/groupId&gt;</span>
      <span class="nt">&lt;artifactId&gt;</span>solr-solrj<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;version&gt;</span>4.10.2<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
    <span class="c">&lt;!-- Solr底层会使用到slf4j日志系统 --&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
      <span class="nt">&lt;groupId&gt;</span>org.slf4j<span class="nt">&lt;/groupId&gt;</span>
      <span class="nt">&lt;artifactId&gt;</span>slf4j-log4j12<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;version&gt;</span>1.7.22<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
    <span class="nt">&lt;dependency&gt;</span>
      <span class="nt">&lt;groupId&gt;</span>commons-logging<span class="nt">&lt;/groupId&gt;</span>
      <span class="nt">&lt;artifactId&gt;</span>commons-logging<span class="nt">&lt;/artifactId&gt;</span>
      <span class="nt">&lt;version&gt;</span>1.2<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;/dependency&gt;</span>
<span class="nt">&lt;/dependencies&gt;</span>
</code></pre></div>    </div>
  </li>
</ul>

<h4 id="22-使用-solrj-添加或修改索引库数据">2.2 使用 SolrJ 添加或修改索引库数据</h4>

<ol>
  <li>
    <p><code class="highlighter-rouge">创建索引</code></p>

    <ol>
      <li>
        <p>以 Document 形式添加或修改数据</p>

        <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">createIndex</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">{</span>
  	<span class="c1">//定义Solr的URL路径</span>
    <span class="nc">String</span> <span class="n">baseURL</span> <span class="o">=</span> <span class="s">"http://192.168.0.111:8080/solr/collection1"</span><span class="o">;</span>
    <span class="c1">//要使用SolrJ首先创建服务对象，Solr实际上是提供web服务，需啊哟创建web服务的对象，支持HTTP请求</span>
    <span class="nc">HttpSolrServer</span> <span class="n">server</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpSolrServer</span><span class="o">(</span><span class="n">baseURL</span><span class="o">);</span>
      
    <span class="c1">//添加索引，需要Document对象</span>
    <span class="nc">SolrInputDocument</span> <span class="n">document</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SolrInputDocument</span><span class="o">();</span>
    <span class="n">document</span><span class="o">.</span><span class="na">addField</span><span class="o">(</span><span class="s">"id"</span><span class="o">,</span> <span class="s">"20"</span><span class="o">);</span>
    <span class="n">document</span><span class="o">.</span><span class="na">addField</span><span class="o">(</span><span class="s">"title"</span><span class="o">,</span> <span class="s">"今天星期二，是一周的第三天。"</span><span class="o">);</span>
      
    <span class="c1">//将Document添加到索引库</span>
    <span class="n">server</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">document</span><span class="o">);</span>
      
    <span class="c1">//提交请求</span>
    <span class="n">server</span><span class="o">.</span><span class="na">commit</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div>        </div>
      </li>
      <li>
        <p>使用注解和 JavaBean 添加或修改数据</p>

        <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">testInsertIndexByBean</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
    <span class="c1">//定义Solr的URL路径</span>
    <span class="nc">String</span> <span class="n">baseURL</span> <span class="o">=</span> <span class="s">"http://192.168.0.111:8080/solr/collection1"</span><span class="o">;</span>
    <span class="c1">//创建Java对象</span>
    <span class="nc">Book</span> <span class="n">book</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Book</span><span class="o">(</span><span class="s">"12345"</span><span class="o">,</span> <span class="s">"Solr初识"</span><span class="o">,</span><span class="s">"silhouette"</span><span class="o">,</span><span class="s">"Solr 是一个独立的企业级搜索应用服务器"</span><span class="o">);</span>
    <span class="nc">HttpSolrServer</span> <span class="n">httpSolrServer</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpSolrServer</span><span class="o">(</span><span class="n">baseURL</span><span class="o">);</span>
      
    <span class="c1">//将对象插入索引库</span>
    <span class="nc">UpdateResponse</span> <span class="n">updateResponse</span> <span class="o">=</span> <span class="n">httpSolrServer</span><span class="o">.</span><span class="na">addBean</span><span class="o">(</span><span class="n">book</span><span class="o">);</span>
    <span class="kt">int</span> <span class="n">status</span> <span class="o">=</span> <span class="n">updateResponse</span><span class="o">.</span><span class="na">getStatus</span><span class="o">();</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">status</span><span class="o">);</span>
    <span class="c1">//提交</span>
    <span class="n">httpSolrServer</span><span class="o">.</span><span class="na">commit</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div>        </div>
      </li>
    </ol>
  </li>
  <li>
    <p><code class="highlighter-rouge">删除索引</code></p>

    <ol>
      <li>
        <p>根据 ID 删除</p>

        <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">testDleteIndexById</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">{</span>
  	<span class="c1">//定义Solr的URL路径</span>
      <span class="nc">String</span> <span class="n">baseURL</span> <span class="o">=</span> <span class="s">"http://192.168.0.111:8080/solr/collection1"</span><span class="o">;</span>
      <span class="c1">//要使用SolrJ首先创建服务对象，Solr实际上是提供web服务，需啊哟创建web服务的对象，支持HTTP请求</span>
      <span class="nc">HttpSolrServer</span> <span class="n">server</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpSolrServer</span><span class="o">(</span><span class="n">baseURL</span><span class="o">);</span>
      
  	<span class="c1">//server.deleteById("10");</span>
      <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>
      <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"10"</span><span class="o">);</span>
      <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"12"</span><span class="o">);</span>
      <span class="c1">//删除索引</span>
      <span class="n">server</span><span class="o">.</span><span class="na">deleteById</span><span class="o">(</span><span class="n">list</span><span class="o">);</span>
      
      <span class="c1">//提交请求</span>
      <span class="n">server</span><span class="o">.</span><span class="na">commit</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div>        </div>
      </li>
      <li>
        <p>通过制定条件删除</p>

        <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">testDleteIndexByQuery</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">{</span>
  	<span class="c1">//定义Solr的URL路径</span>
    <span class="nc">String</span> <span class="n">baseURL</span> <span class="o">=</span> <span class="s">"http://192.168.0.111:8080/solr/collection1"</span><span class="o">;</span>
    <span class="c1">//要使用SolrJ首先创建服务对象，Solr实际上是提供web服务，需啊哟创建web服务的对象，支持HTTP请求</span>
    <span class="nc">HttpSolrServer</span> <span class="n">server</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpSolrServer</span><span class="o">(</span><span class="n">baseURL</span><span class="o">);</span>
    <span class="c1">//Solr提供的是web服务，在接收用户传递的参数是就是request参数</span>
    <span class="nc">String</span> <span class="n">query</span><span class="o">=</span><span class="s">"title:solr"</span><span class="o">;</span>
      
    <span class="c1">//删除索引</span>
    <span class="n">server</span><span class="o">.</span><span class="na">deleteByQuery</span><span class="o">(</span><span class="n">query</span><span class="o">);</span>
      
    <span class="c1">//提交请求</span>
    <span class="n">server</span><span class="o">.</span><span class="na">commit</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div>        </div>
      </li>
    </ol>
  </li>
  <li>
    <p><code class="highlighter-rouge">查询索引</code></p>

    <ol>
      <li>
        <p>以 Document 形式返回查询结果</p>

        <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">testQueryIndex</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">{</span>
  	<span class="c1">//定义Solr的URL路径</span>
    <span class="nc">String</span> <span class="n">baseURL</span> <span class="o">=</span> <span class="s">"http://192.168.0.111:8080/solr/collection1"</span><span class="o">;</span>
    <span class="c1">//要使用SolrJ首先创建服务对象，Solr实际上是提供web服务，需啊哟创建web服务的对象，支持HTTP请求</span>
    <span class="nc">HttpSolrServer</span> <span class="n">server</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpSolrServer</span><span class="o">(</span><span class="n">baseURL</span><span class="o">);</span>
      
    <span class="nc">String</span> <span class="n">query</span> <span class="o">=</span> <span class="s">"*:*"</span><span class="o">;</span>
    <span class="c1">//进行查询操作</span>
    <span class="nc">SolrParams</span> <span class="n">params</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SolrQuery</span><span class="o">(</span><span class="n">query</span> <span class="o">);</span>
    <span class="nc">QueryResponse</span> <span class="n">queryResponse</span> <span class="o">=</span> <span class="n">server</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">params</span><span class="o">);</span>
      
    <span class="nc">SolrDocumentList</span> <span class="n">results</span> <span class="o">=</span> <span class="n">queryResponse</span><span class="o">.</span><span class="na">getResults</span><span class="o">();</span>
      
    <span class="k">for</span> <span class="o">(</span><span class="nc">SolrDocument</span> <span class="n">solrDocument</span> <span class="o">:</span> <span class="n">results</span><span class="o">)</span> <span class="o">{</span>
      <span class="nc">String</span> <span class="n">id</span> <span class="o">=</span> <span class="o">(</span><span class="nc">String</span><span class="o">)</span> <span class="n">solrDocument</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"id"</span><span class="o">);</span>
      <span class="nc">String</span> <span class="n">name</span> <span class="o">=</span> <span class="o">(</span><span class="nc">String</span><span class="o">)</span> <span class="n">solrDocument</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"name"</span><span class="o">);</span>
      
      <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"id:"</span><span class="o">+</span><span class="n">id</span><span class="o">+</span><span class="s">" name:"</span><span class="o">+</span><span class="n">name</span><span class="o">);</span>
    <span class="o">}</span>
      
    <span class="c1">//提交请求</span>
    <span class="n">server</span><span class="o">.</span><span class="na">commit</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div>        </div>
      </li>
      <li>
        <p>以 JavaBean 形式返回查询结果</p>

        <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">testQueryIndex</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">{</span>
		<span class="c1">//定义Solr的URL路径</span>
      <span class="nc">String</span> <span class="n">baseURL</span> <span class="o">=</span> <span class="s">"http://192.168.0.111:8080/solr/collection1"</span><span class="o">;</span>
      <span class="c1">//要使用SolrJ首先创建服务对象，Solr实际上是提供web服务，需啊哟创建web服务的对象，支持HTTP请求</span>
      <span class="nc">HttpSolrServer</span> <span class="n">server</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpSolrServer</span><span class="o">(</span><span class="n">baseURL</span><span class="o">);</span>
      
      <span class="nc">String</span> <span class="n">query</span> <span class="o">=</span> <span class="s">"author:silhouette"</span><span class="o">;</span>
      <span class="c1">//进行查询操作</span>
      <span class="nc">SolrParams</span> <span class="n">params</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SolrQuery</span><span class="o">(</span><span class="n">query</span><span class="o">);</span>
      <span class="nc">QueryResponse</span> <span class="n">queryResponse</span> <span class="o">=</span> <span class="n">server</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">params</span><span class="o">);</span>
      
      <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Book</span><span class="o">&gt;</span> <span class="n">books</span> <span class="o">=</span> <span class="n">queryResponse</span><span class="o">.</span><span class="na">getBeans</span><span class="o">(</span><span class="nc">Book</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
      
      <span class="k">for</span> <span class="o">(</span><span class="nc">Book</span> <span class="n">book</span> <span class="o">:</span> <span class="n">books</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">book</span><span class="o">);</span>
      <span class="o">}</span>
      
      <span class="c1">//提交请求</span>
      <span class="n">server</span><span class="o">.</span><span class="na">commit</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div>        </div>

        <blockquote>
          <p>注意：1.JavaBean的属性要和Solr界面管理展示的属性要一致，如果缺少字段则补上，如果属性不同，就修改JavaBean或者scheme.xml配置文件。</p>
        </blockquote>
      </li>
      <li>
        <p>SolrQuery 对象的高级查询</p>

        <ol>
          <li>
            <p>匹配所有文档：*:* （通配符？和*：“*”表示匹配任意字符；“？”表示匹配出现的位置）</p>
          </li>
          <li>
            <p>布尔操作：AND、OR 和 NOT 布尔操作（推荐使用大写，区分普通字段）</p>
          </li>
          <li>
            <p>子表达式查询（子查询）：可以使用“()”构造子查询。 比如：(query1 AND query2) OR(query3 AND query4)</p>
          </li>
          <li>
            <p>相似度查询：</p>

            <ol>
              <li>默认相似度查询：title:appla~ ，此时默认编辑距离是2。～表示模糊查询，默认编辑距离为2</li>
              <li>指定编辑举例的相似度查询：对模糊查询可以设置编辑举例，可选 0~2 的整数。</li>
            </ol>
          </li>
          <li>
            <p>范围查询（Range Query）：Lucene 支持对数字、日期甚至文本的范围查询。结束的范 围可以使用“*”通配符。</p>

            <ol>
              <li>日期范围（ISO-8601 时间 GMT）：a_begin_date:[1990-01-01T00:00:00.000Z TO 1999-12-31T24:59:99.999Z]</li>
              <li>数字：salary:[2000 TO *]</li>
              <li>文本：entryNm:[a TO a]</li>
            </ol>
          </li>
          <li>
            <p>日期匹配：YEAR, MONTH, DAY, DATE (synonymous with DAY) HOUR, MINUTE, SECOND, MILLISECOND, and MILLI (synonymous with MILLISECOND)可以被标志成 日期。</p>

            <ol>
              <li>r_event_date:[* TO NOW-2YEAR]：2 年前的现在这个时间</li>
              <li>r_event_date:[* TO NOW/DAY-2YEAR]：2 年前前一天的这个时间</li>
            </ol>

            <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">testQueryIndex</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">{</span>
  	<span class="c1">//定义Solr的URL路径</span>
      <span class="nc">String</span> <span class="n">baseURL</span> <span class="o">=</span> <span class="s">"http://192.168.0.111:8080/solr/collection1"</span><span class="o">;</span>
      <span class="c1">//要使用SolrJ首先创建服务对象，Solr实际上是提供web服务，需啊哟创建web服务的对象，支持HTTP请求</span>
      <span class="nc">HttpSolrServer</span> <span class="n">server</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpSolrServer</span><span class="o">(</span><span class="n">baseURL</span><span class="o">);</span>
           	
		<span class="nc">SolrParams</span> <span class="n">params</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SolrQuery</span><span class="o">(</span><span class="s">"description:战国 AND id:3"</span><span class="o">);</span>
		<span class="nc">QueryResponse</span> <span class="n">queryResponse</span> <span class="o">=</span> <span class="n">server</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">params</span><span class="o">);</span>
         		
		<span class="nc">List</span><span class="o">&lt;</span><span class="nc">Book</span><span class="o">&gt;</span> <span class="n">books</span> <span class="o">=</span> <span class="n">queryResponse</span><span class="o">.</span><span class="na">getBeans</span><span class="o">(</span><span class="nc">Book</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
         		
		<span class="k">for</span> <span class="o">(</span><span class="nc">Book</span> <span class="n">book</span> <span class="o">:</span> <span class="n">books</span><span class="o">)</span> <span class="o">{</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">book</span><span class="o">);</span>
		<span class="o">}</span>
         		
		<span class="c1">//提交请求</span>
		<span class="n">server</span><span class="o">.</span><span class="na">commit</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div>            </div>
          </li>
        </ol>
      </li>
    </ol>
  </li>
  <li>
    <p><code class="highlighter-rouge">排序实现</code></p>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">testQueryIndex</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">{</span>
		<span class="c1">//定义Solr的URL路径</span>
      <span class="nc">String</span> <span class="n">baseURL</span> <span class="o">=</span> <span class="s">"http://192.168.0.111:8080/solr/collection1"</span><span class="o">;</span>
      <span class="c1">//要使用SolrJ首先创建服务对象，Solr实际上是提供web服务，需啊哟创建web服务的对象，支持HTTP请求</span>
      <span class="nc">HttpSolrServer</span> <span class="n">server</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpSolrServer</span><span class="o">(</span><span class="n">baseURL</span><span class="o">);</span>
   
      <span class="nc">String</span> <span class="n">query</span> <span class="o">=</span> <span class="s">"author:*"</span><span class="o">;</span>
      <span class="c1">//进行查询操作</span>
      <span class="nc">SolrParams</span> <span class="n">params</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SolrQuery</span><span class="o">(</span><span class="n">query</span><span class="o">);</span>
		<span class="n">params</span><span class="o">.</span><span class="na">addSort</span><span class="o">(</span><span class="s">"id"</span><span class="o">,</span> <span class="no">ORDER</span><span class="o">.</span><span class="na">asc</span><span class="o">);</span>
      <span class="nc">QueryResponse</span> <span class="n">queryResponse</span> <span class="o">=</span> <span class="n">server</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">params</span><span class="o">);</span>
   
      <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Book</span><span class="o">&gt;</span> <span class="n">books</span> <span class="o">=</span> <span class="n">queryResponse</span><span class="o">.</span><span class="na">getBeans</span><span class="o">(</span><span class="nc">Book</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
   
      <span class="k">for</span> <span class="o">(</span><span class="nc">Book</span> <span class="n">book</span> <span class="o">:</span> <span class="n">books</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">book</span><span class="o">);</span>
      <span class="o">}</span>
   
      <span class="c1">//提交请求</span>
      <span class="n">server</span><span class="o">.</span><span class="na">commit</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p><code class="highlighter-rouge">分页实现</code></p>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">testQueryIndex</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">{</span>
		<span class="c1">//定义Solr的URL路径</span>
      <span class="nc">String</span> <span class="n">baseURL</span> <span class="o">=</span> <span class="s">"http://192.168.0.111:8080/solr/collection1"</span><span class="o">;</span>
      <span class="c1">//要使用SolrJ首先创建服务对象，Solr实际上是提供web服务，需啊哟创建web服务的对象，支持HTTP请求</span>
      <span class="nc">HttpSolrServer</span> <span class="n">server</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpSolrServer</span><span class="o">(</span><span class="n">baseURL</span><span class="o">);</span>
   
      <span class="c1">//要查询的页数</span>
      <span class="kt">int</span> <span class="n">pageNum</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span>
      <span class="c1">//每页显示条数</span>
      <span class="kt">int</span> <span class="n">pageSize</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span>
      <span class="c1">//当前页的起始条数</span>
      <span class="kt">int</span> <span class="n">start</span> <span class="o">=</span> <span class="o">(</span><span class="n">pageNum</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">*</span> <span class="n">pageSize</span><span class="o">;</span>
      <span class="c1">//当前页的结束条数</span>
      <span class="kt">int</span> <span class="n">end</span> <span class="o">=</span> <span class="n">start</span> <span class="o">+</span> <span class="n">pageSize</span><span class="o">;</span>
      <span class="nc">SolrQuery</span> <span class="n">query</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SolrQuery</span><span class="o">(</span><span class="s">"*:*"</span><span class="o">);</span>
   
      <span class="c1">//设置起始条数</span>
      <span class="n">query</span><span class="o">.</span><span class="na">setStart</span><span class="o">(</span><span class="n">start</span><span class="o">);</span>
      <span class="c1">//设置每页条数</span>
      <span class="n">query</span><span class="o">.</span><span class="na">setRows</span><span class="o">(</span><span class="n">pageSize</span><span class="o">);</span>
      <span class="c1">//进行查询操作</span>
      <span class="nc">QueryResponse</span> <span class="n">queryResponse</span> <span class="o">=</span> <span class="n">server</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">query</span><span class="o">);</span>
      <span class="nc">SolrDocumentList</span> <span class="n">results</span> <span class="o">=</span> <span class="n">queryResponse</span><span class="o">.</span><span class="na">getResults</span><span class="o">();</span>
      <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"当前第"</span> <span class="o">+</span> <span class="n">pageNum</span> <span class="o">+</span> <span class="s">"页，本页共"</span> <span class="o">+</span><span class="n">results</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">+</span> <span class="s">"条数据。"</span><span class="o">);</span>
   
      <span class="k">for</span> <span class="o">(</span><span class="nc">SolrDocument</span> <span class="n">solrDocument</span> <span class="o">:</span> <span class="n">results</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">solrDocument</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"id"</span><span class="o">));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">solrDocument</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"title"</span><span class="o">));</span>
      <span class="o">}</span>
   
      <span class="c1">//提交请求</span>
      <span class="n">server</span><span class="o">.</span><span class="na">commit</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p><code class="highlighter-rouge">高亮实现</code></p>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">testQueryIndex</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">{</span>
		<span class="c1">//定义Solr的URL路径</span>
      <span class="nc">String</span> <span class="n">baseURL</span> <span class="o">=</span> <span class="s">"http://192.168.0.111:8080/solr/collection1"</span><span class="o">;</span>
      <span class="c1">//要使用SolrJ首先创建服务对象，Solr实际上是提供web服务，需啊哟创建web服务的对象，支持HTTP请求</span>
      <span class="nc">HttpSolrServer</span> <span class="n">server</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpSolrServer</span><span class="o">(</span><span class="n">baseURL</span><span class="o">);</span>
      <span class="c1">//定义查询条件</span>
      <span class="nc">String</span> <span class="n">query</span> <span class="o">=</span> <span class="s">"title:*"</span><span class="o">;</span>
   
      <span class="c1">//进行查询操作</span>
      <span class="nc">SolrQuery</span> <span class="n">params</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SolrQuery</span><span class="o">(</span><span class="n">query</span><span class="o">);</span>
   
      <span class="c1">//设置高亮</span>
      <span class="n">params</span><span class="o">.</span><span class="na">setHighlightSimplePre</span><span class="o">(</span><span class="s">"&lt;em&gt;"</span><span class="o">);</span>
      <span class="n">params</span><span class="o">.</span><span class="na">setHighlightSimplePost</span><span class="o">(</span><span class="s">"&lt;/em&gt;"</span><span class="o">);</span>
      <span class="c1">//设置高亮显示的字段</span>
      <span class="n">params</span><span class="o">.</span><span class="na">addHighlightField</span><span class="o">(</span><span class="s">"title"</span><span class="o">);</span>
   
      <span class="nc">QueryResponse</span> <span class="n">queryResponse</span> <span class="o">=</span> <span class="n">server</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">params</span><span class="o">);</span>
      <span class="nc">SolrDocumentList</span> <span class="n">results</span> <span class="o">=</span> <span class="n">queryResponse</span><span class="o">.</span><span class="na">getResults</span><span class="o">();</span>
   
      <span class="c1">//在map中首先使用每一条数据的id作为键，将数据作为值（只有高亮字段）</span>
      <span class="c1">//Map&lt;String, List&lt;String&gt;&gt;存放的是一条数据的所有高亮字段，键就是字段的名称，值就是高亮显示的数据</span>
      <span class="c1">//List&lt;String&gt;里面就是经过处理的高亮的内容，主要是因为Solr中的字段可以存储多个值，对于单个数据而言，list的长度都为1</span>
      <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;&gt;&gt;</span> <span class="n">highlighting</span> <span class="o">=</span> <span class="n">queryResponse</span><span class="o">.</span><span class="na">getHighlighting</span><span class="o">();</span>
   
      <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"找到了"</span><span class="o">+</span><span class="n">results</span><span class="o">.</span><span class="na">size</span><span class="o">()+</span><span class="s">"条记录"</span><span class="o">);</span>
   
      <span class="c1">//那么获取高亮数据可以获取对应的id，在指定高亮字段的名称，在获取list的第0个元素</span>
      <span class="k">for</span> <span class="o">(</span><span class="nc">SolrDocument</span> <span class="n">solrDocument</span> <span class="o">:</span> <span class="n">results</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">id</span> <span class="o">=</span> <span class="n">solrDocument</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"id"</span><span class="o">).</span><span class="na">toString</span><span class="o">();</span>
        <span class="nc">String</span> <span class="n">title</span> <span class="o">=</span> <span class="n">highlighting</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">id</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="s">"title"</span><span class="o">).</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
   
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"id:"</span><span class="o">+</span><span class="n">id</span><span class="o">+</span><span class="s">"--- title:"</span><span class="o">+</span><span class="n">title</span><span class="o">);</span>
      <span class="o">}</span>
   
      <span class="c1">//提交请求</span>
      <span class="n">server</span><span class="o">.</span><span class="na">commit</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p><code class="highlighter-rouge">设置权重</code></p>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">testQueryIndex</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">{</span>
		<span class="c1">//定义Solr的URL路径</span>
      <span class="nc">String</span> <span class="n">baseURL</span> <span class="o">=</span> <span class="s">"http://192.168.0.111:8080/solr/collection1"</span><span class="o">;</span>
      <span class="c1">//要使用SolrJ首先创建服务对象，Solr实际上是提供web服务，需啊哟创建web服务的对象，支持HTTP请求</span>
      <span class="nc">HttpSolrServer</span> <span class="n">server</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpSolrServer</span><span class="o">(</span><span class="n">baseURL</span><span class="o">);</span>
   
      <span class="nc">SolrInputDocument</span> <span class="n">doc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SolrInputDocument</span><span class="o">();</span>
   		
		<span class="c1">//通过boost设置字段的权重</span>
		<span class="n">doc</span><span class="o">.</span><span class="na">addField</span><span class="o">(</span><span class="s">"id"</span><span class="o">,</span> <span class="s">"20"</span><span class="o">);</span>
		<span class="n">doc</span><span class="o">.</span><span class="na">addField</span><span class="o">(</span><span class="s">"description"</span><span class="o">,</span> <span class="s">"Spring从入门到精通是一本好书"</span><span class="o">,</span><span class="mf">2.0f</span><span class="o">);</span>
		<span class="n">server</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">doc</span><span class="o">);</span>
   		
		<span class="c1">//提交请求</span>
		<span class="n">server</span><span class="o">.</span><span class="na">commit</span><span class="o">();</span>
<span class="o">}</span>
   
<span class="nd">@Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">testCreateIndex</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
  	 <span class="c1">//定义Solr的URL路径</span>
		<span class="nc">String</span> <span class="n">baseURL</span> <span class="o">=</span> <span class="s">"http://192.168.0.111:8080/solr/collection1"</span><span class="o">;</span>
		<span class="c1">//要使用SolrJ首先创建服务对象，Solr实际上是提供web服务，需啊哟创建web服务的对象，支持HTTP请求</span>
		<span class="nc">HttpSolrServer</span> <span class="n">server</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpSolrServer</span><span class="o">(</span><span class="n">baseURL</span><span class="o">);</span>
   		
		<span class="nc">SolrParams</span> <span class="n">params</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SolrQuery</span><span class="o">(</span><span class="s">"description:Spring"</span><span class="o">);</span>
		<span class="nc">QueryResponse</span> <span class="n">queryResponse</span> <span class="o">=</span> <span class="n">server</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="n">params</span><span class="o">);</span>
		<span class="nc">SolrDocumentList</span> <span class="n">results</span> <span class="o">=</span> <span class="n">queryResponse</span><span class="o">.</span><span class="na">getResults</span><span class="o">();</span>
   		
		<span class="k">for</span> <span class="o">(</span><span class="nc">SolrDocument</span> <span class="n">solrDocument</span> <span class="o">:</span> <span class="n">results</span><span class="o">)</span> <span class="o">{</span>
			<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">solrDocument</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"id"</span><span class="o">)+</span><span class="s">" : "</span><span class="o">+</span><span class="n">solrDocument</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"description"</span><span class="o">));</span>
		<span class="o">}</span>
   		
		<span class="c1">//提交请求</span>
		<span class="n">server</span><span class="o">.</span><span class="na">commit</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="三solrcloud-概述">三、SolrCloud 概述</h2>

<h4 id="31-什么是-solrcloud">3.1 什么是 SolrCloud</h4>

<p>单点的 Solr 服务的问题：</p>

<ul>
  <li>能存储的数据量有限，如果是海量数据，无法存储</li>
  <li>容易出现单点故障</li>
  <li>对高并发的处理能力差</li>
</ul>

<p>如果我们的需要处理海量数据、应对高并发请求，并且让我们的服务实现高可用。那么久必须搭建<code class="highlighter-rouge">SolrCloud</code>了。反之，如果数据量很小，请求并发低的情况下，是不需要 SolrColud 的，单点 Solr 久够了。</p>

<p><code class="highlighter-rouge">SolrCloud</code>：Solr 云，是Solr 提供的分布式搜索方案，可以解决海量数据的分布式全文检索，因为搭建了集群，因此具备了高可用的特性，同时对数据进行著丛备份，避免了单点故障问题。可以做到数据的快速恢复。并且可以动态的添加新的节点，再对数据进行平衡。</p>

<h4 id="32-solrcloud-结构简介">3.2 SolrCloud 结构简介</h4>

<p>为了实现海量数据的存储，我们会把索引进行分层(<code class="highlighter-rouge">Shard</code>)，把分片后的数据存储到不同的 Solr 节点。为了保证节点数据的高可用，避免单点故障，我们又会对每一个 Shard 进行复制，产生很多副本(<code class="highlighter-rouge">Replicas</code>)，每一个副本对于一个 Solr 节点中的一个 core。用户访问的时候，可以访问任何一个会被自动分配到任何一个可用副本进行查询，这样久实现了负载均衡。</p>

<p><img src="/Users/silhouette/note/全文检索技术/Solr/images/00/06-SolrCloud.png" alt="06-SolrCloud" style="zoom:50%;" /></p>

<ul>
  <li>Collection：在SolrCloud集群中逻辑意义上的完整的索引。一般会包含多个Shard（分片），如果大于1个分片，那么就是分布式存储</li>
  <li>Shard: Collection的逻辑分片。每个Shard被化成一个或者多个replicas（副本），通过选举确定哪个是Leader（主），其它为从</li>
  <li>Replica: Shard的一个副本，存储在Solr集群的某一台机器中（就是一个节点），对应这台Solr的一个Core。</li>
  <li>Leader: 赢得选举的Shard replicas。每个Shard有多个Replicas，这几个Replicas需要选举来确定一个Leader。选举可以发生在任何时间，但是通常他们仅在某个Solr实例发生故障时才会触发。当索引documents时，SolrCloud会传递它们到此Shard对应的leader，leader再分发它们到全部Shard的replicas。</li>
</ul>

<h4 id="33-solrcloud-的搭建">3.3 SolrCloud 的搭建</h4>

<ol>
  <li>
    <p>先搭建Zookeeper 集群</p>
  </li>
  <li>
    <p>修改Solr配置文件，配置集群的中每台Solr服务的IP和端口</p>

    <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;solrcloud&gt;</span>
    <span class="nt">&lt;str</span> <span class="na">name=</span><span class="s">"host"</span><span class="nt">&gt;</span>192.168.0.109<span class="nt">&lt;/str&gt;</span>
    <span class="nt">&lt;int</span> <span class="na">name=</span><span class="s">"hostPort"</span><span class="nt">&gt;</span>8080<span class="nt">&lt;/int&gt;</span>
    <span class="nt">&lt;str</span> <span class="na">name=</span><span class="s">"hostContext"</span><span class="nt">&gt;</span>${hostContext:solr}<span class="nt">&lt;/str&gt;</span>
    <span class="nt">&lt;int</span> <span class="na">name=</span><span class="s">"zkClientTimeout"</span><span class="nt">&gt;</span>${zkClientTimeout:30000}<span class="nt">&lt;/int&gt;</span>
    <span class="nt">&lt;bool</span> <span class="na">name=</span><span class="s">"genericCoreNodeNames"</span><span class="nt">&gt;</span>${genericCoreNodeNames:true}<span class="nt">&lt;/bool&gt;</span>
<span class="nt">&lt;/solrcloud&gt;</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>将Solr配置文件上传到Zookeeper中统一管理</p>

    <ul>
      <li>
        <p>由于zookeeper统一管理solr的配置文件（主要是schema.xml、solrconfig.xml）， solrCloud各各节点使用zookeeper管理的配置文件。以后无论创建任何的core，本地的配置文件都没用了，使用的都是zookeeper的配置文件.</p>
      </li>
      <li>
        <p>执行下边的命令将/home/silhouette/solr-index/collection1/conf下的配置文件上传到zookeeper：</p>

        <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#  Solr提供的访问Zookeeper的脚本文件 :</span>
<span class="c">#			/home/silhouette/solr-4.10.2/example/scripts/cloud-scripts/zkcli.sh  </span>
<span class="c">#  指定Zookeeper:  </span>
<span class="c">#			-zkhost 192.168.0.109:2181,192.168.0.112:2181,192.168.0.114:2181  </span>
<span class="c">#   -cmd upconfig： 指定操作的命令。这里是上传配置</span>
<span class="c">#  指定要上传的配置文件目录，我们上传Solr的样例中的配置</span>
<span class="c">#  		confdir /home/silhouette/solr-index/collection1/conf</span>
<span class="c">#   -confname solrconf ：指定注册到Zookeeper中后配置文件目录名称</span>
<span class="nv">$ </span>sh /home/silhouette/solr-4.10.2/example/scripts/cloud-scripts/zkcli.sh <span class="nt">-zkhost</span> 192.168.0.109:2181,192.168.0.112:2181,192.168.0.114:2181 <span class="nt">-cmd</span> upconfig <span class="nt">-confdir</span> /home/silhouette/solr-index/collection1/conf <span class="nt">-confname</span> solrconf
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
  <li>
    <p>启动SolrCloud</p>

    <ul>
      <li>
        <p>启动每一台服务器中的Solr服务，访问SolrCloud，查看云的状态。</p>
      </li>
      <li>
        <p>效果如下图所示：</p>

        <p><img src="/Users/silhouette/note/全文检索技术/Solr/images/00/08-SolrCloud效果图.png" alt="08-SolrCloud效果图" style="zoom:50%;" /></p>
      </li>
    </ul>
  </li>
</ol>

<h4 id="34-通过管理界面查看和操作solrcloud">3.4 通过管理界面查看和操作SolrCloud</h4>

<ul>
  <li>
    <p>SolrCloud的操作命令</p>

    <ul>
      <li>Solr采用的是类似WebService的API接口，采用Http方式进行访问，因此，其操作命令都是一些URL联接及对应参数</li>
    </ul>

    <ol>
      <li>
        <p>创建core命令(在页面的Url中执行)</p>

        <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://192.168.0.109:8080/solr/admin/collections?action=CREATE&amp;name=myCollection2&amp;numShards=2&amp;
replicationFactor=2&amp;maxShardsPerNode=8&amp;property.schema=schema.xml&amp;property.config=solrconfig.xml
     
参数说明：
    name：指明collection名称
    numShards：指明分片数
    replicationFactor：指明副本数
    maxShardsPerNode： 每个节点最大分片数（默认为1）
    property.schema：指定使用的schema.xml，这个文件必须在zookeeper上。
    property.config：指定使用的solrconfig.xml，这个文件必须在zookeeper上。
</code></pre></div>        </div>
      </li>
      <li>
        <p>删除Collection命令</p>

        <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://192.168.0.109:8080/solr/admin/collections?action=DELETE&amp;name=collection1
</code></pre></div>        </div>
      </li>
      <li>
        <p>查询所有的Collection</p>

        <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code> http://192.168.0.109:8080/solr/admin/collections?action=LIST
</code></pre></div>        </div>
      </li>
      <li>
        <p>显示集群的状态</p>

        <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://192.168.0.109:8080/solr/admin/collections?action=CLUSTERSTATUS
</code></pre></div>        </div>
      </li>
      <li>
        <p>分裂shard</p>

        <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://192.168.0.109:8080/solr/admin/collections?action=SPLITSHARD&amp;collection=myCollection2
&amp;shard=shard2
</code></pre></div>        </div>
      </li>
      <li>
        <p>删除shard</p>

        <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://192.168.0.109:8080/solr/admin/collections?action=DELETESHARD&amp;collection=myCollection2
&amp;shard=shard2
</code></pre></div>        </div>
      </li>
    </ol>
  </li>
  <li>
    <p>SolrCloud测试</p>

    <ul>
      <li>
        <p>创建索引：在一台Solr上创建的索引，从其它solr服务上可以查询到</p>

        <p><img src="/Users/silhouette/note/全文检索技术/Solr/images/00/09-solrCloud创建索引.png" alt="09-solrCloud创建索引" style="zoom:50%;" /></p>
      </li>
      <li>
        <p>查询索引：从任意一台Solr上查询索引，选择任意的一个分片，都会返回一个完整的结果</p>

        <p><img src="/Users/silhouette/note/全文检索技术/Solr/images/00/10-solrCloud查询索引.png" alt="10-solrCloud查询索引" style="zoom:50%;" /></p>
      </li>
    </ul>
  </li>
</ul>

<h4 id="35-使用solrj访问solrcloud">3.5 使用SolrJ访问SolrCloud</h4>

<p>与单机Solr相比，API仅仅是在创建SolrServer时发生了改变，其它没有变化。单机采用的是：HttpSolrServer，SolrCloud采用的是：CloudSolrServer。</p>

<ul>
  <li>
    <p>Maven的依赖</p>

    <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;dependencies&gt;</span>
		<span class="nt">&lt;dependency&gt;</span>
			<span class="nt">&lt;groupId&gt;</span>org.apache.solr<span class="nt">&lt;/groupId&gt;</span>
			<span class="nt">&lt;artifactId&gt;</span>solr-solrj<span class="nt">&lt;/artifactId&gt;</span>
			<span class="nt">&lt;version&gt;</span>4.10.2<span class="nt">&lt;/version&gt;</span>
		<span class="nt">&lt;/dependency&gt;</span>
		<span class="c">&lt;!-- Solr底层会使用到slf4j日志系统 --&gt;</span>
		<span class="nt">&lt;dependency&gt;</span>
			<span class="nt">&lt;groupId&gt;</span>org.slf4j<span class="nt">&lt;/groupId&gt;</span>
			<span class="nt">&lt;artifactId&gt;</span>slf4j-log4j12<span class="nt">&lt;/artifactId&gt;</span>
			<span class="nt">&lt;version&gt;</span>1.7.22<span class="nt">&lt;/version&gt;</span>
		<span class="nt">&lt;/dependency&gt;</span>
		<span class="nt">&lt;dependency&gt;</span>
			<span class="nt">&lt;groupId&gt;</span>commons-logging<span class="nt">&lt;/groupId&gt;</span>
			<span class="nt">&lt;artifactId&gt;</span>commons-logging<span class="nt">&lt;/artifactId&gt;</span>
			<span class="nt">&lt;version&gt;</span>1.2<span class="nt">&lt;/version&gt;</span>
		<span class="nt">&lt;/dependency&gt;</span>
  	<span class="c">&lt;!-- Junit单元测试 --&gt;</span>
  	<span class="nt">&lt;dependency&gt;</span>
			<span class="nt">&lt;groupId&gt;</span>junit<span class="nt">&lt;/groupId&gt;</span>
			<span class="nt">&lt;artifactId&gt;</span>junit<span class="nt">&lt;/artifactId&gt;</span>
			<span class="nt">&lt;version&gt;</span>4.12<span class="nt">&lt;/version&gt;</span>
		<span class="nt">&lt;/dependency&gt;</span>
<span class="nt">&lt;/dependencies&gt;</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>添加或修改数据</p>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">testWrite</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span><span class="o">{</span>
		<span class="c1">// 创建SolrServer</span>
		<span class="nc">CloudSolrServer</span> <span class="n">server</span> <span class="o">=</span> 
      					<span class="k">new</span> <span class="nf">CloudSolrServer</span><span class="o">(</span><span class="s">"192.168.0.109:2181,192.168.0.112:2181,192.168.0.114:2181"</span><span class="o">);</span>
		<span class="c1">// 指定要访问的Collection名称</span>
		<span class="n">server</span><span class="o">.</span><span class="na">setDefaultCollection</span><span class="o">(</span><span class="s">"collection1"</span><span class="o">);</span>
  		
		<span class="c1">// 创建Document对象</span>
		<span class="nc">SolrInputDocument</span> <span class="n">document</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SolrInputDocument</span><span class="o">();</span>
		<span class="c1">// 添加字段</span>
		<span class="n">document</span><span class="o">.</span><span class="na">addField</span><span class="o">(</span><span class="s">"id"</span><span class="o">,</span> <span class="s">"1"</span><span class="o">);</span>
		<span class="n">document</span><span class="o">.</span><span class="na">addField</span><span class="o">(</span><span class="s">"title"</span><span class="o">,</span> <span class="s">"solrcloud写入的数据"</span><span class="o">);</span>
  		
		<span class="c1">// 添加Document到Server</span>
		<span class="n">server</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">document</span><span class="o">);</span>
		<span class="c1">// 提交</span>
		<span class="n">server</span><span class="o">.</span><span class="na">commit</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>删除数据</p>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">testDelete</span><span class="o">()</span><span class="kd">throws</span> <span class="nc">Exception</span><span class="o">{</span>
    <span class="c1">// 创建SolrServer</span>
    <span class="nc">CloudSolrServer</span> <span class="n">server</span> <span class="o">=</span> 
      	<span class="k">new</span> <span class="nf">CloudSolrServer</span><span class="o">(</span><span class="s">"192.168.0.109:2181,192.168.0.112:2181,192.168.0.114:2181"</span><span class="o">);</span>
    <span class="c1">// 指定要访问的Collection名称</span>
    <span class="n">server</span><span class="o">.</span><span class="na">setDefaultCollection</span><span class="o">(</span><span class="s">"collection1"</span><span class="o">);</span>
    <span class="c1">// 根据ID删除</span>
    <span class="n">server</span><span class="o">.</span><span class="na">deleteById</span><span class="o">(</span><span class="s">"1"</span><span class="o">);</span>
    <span class="c1">// 提交</span>
    <span class="n">server</span><span class="o">.</span><span class="na">commit</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>查询数据</p>

    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Test</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">testSearch</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
    <span class="c1">// 创建SolrServer</span>
    <span class="nc">CloudSolrServer</span> <span class="n">server</span> <span class="o">=</span> 
      	<span class="k">new</span> <span class="nf">CloudSolrServer</span><span class="o">(</span><span class="s">"192.168.0.109:2181,192.168.0.112:2181,192.168.0.114:2181"</span><span class="o">);</span>
    <span class="c1">// 指定要访问的Collection名称</span>
    <span class="n">server</span><span class="o">.</span><span class="na">setDefaultCollection</span><span class="o">(</span><span class="s">"collection1"</span><span class="o">);</span>
  
    <span class="c1">// 查找数据</span>
    <span class="nc">QueryResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">server</span><span class="o">.</span><span class="na">query</span><span class="o">(</span><span class="k">new</span> <span class="nc">SolrQuery</span><span class="o">(</span><span class="s">"title:solrcloud"</span><span class="o">));</span>
  
    <span class="c1">// 以document形式解析数据</span>
    <span class="nc">SolrDocumentList</span> <span class="n">documentList</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getResults</span><span class="o">();</span>
    <span class="c1">// 遍历</span>
    <span class="k">for</span> <span class="o">(</span><span class="nc">SolrDocument</span> <span class="n">solrDocument</span> <span class="o">:</span> <span class="n">documentList</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">solrDocument</span><span class="o">.</span><span class="na">getFieldValue</span><span class="o">(</span><span class="s">"id"</span><span class="o">));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">solrDocument</span><span class="o">.</span><span class="na">getFieldValue</span><span class="o">(</span><span class="s">"title"</span><span class="o">));</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div>    </div>
  </li>
</ul>

:ET